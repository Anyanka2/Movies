{"version":3,"file":"static/js/186.89ea995b.chunk.js","mappings":"mPAuDA,UAjDgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,sGAEjBJ,GAAa,GAFI,UAGSK,EAAAA,EAAAA,IAAkBX,GAH3B,gBAGTY,EAHS,EAGTA,QACRR,EAAWQ,GACXN,GAAa,GALI,kDAOjBE,EAAS,KAAMK,SACfC,EAAAA,GAAAA,MAAA,+CARiB,yBAUjBR,GAAa,GAVI,6EAAH,qDAalBI,GACD,GAAE,CAACV,KAGF,gCACsB,IAAnBG,EAAQY,SACP,4BACE,wBAAI,mBACJ,wBACGZ,EAAQa,KAAI,SAAAC,GAAM,OACjB,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOG,GADC,SASL,IAAnBjB,EAAQY,SACP,yBAAK,8CAENR,IACC,yBAAG,iCAA+BA,KAElCF,IAAa,SAAC,IAAD,MAGpB,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/TMDB.API';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        setIsLoading(true);\n        const { results } = await fetchMovieReviews(movieId);\n        setReviews(results);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error.message);\n        toast.error(`Error fetching movie details: ${error}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length !== 0 && (\n        <div>\n          <h2>Movie Reviews</h2>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <p>{review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {reviews.length === 0 && (\n        <div>We don't have any reviews for this movie.</div>\n      )}\n      {error && (\n        <p>Whoops, something went wrong: {error}</p>\n      )}\n       {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default Reviews;\n\n\n"],"names":["movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","useEffect","fetchReviews","fetchMovieReviews","results","message","toast","length","map","review","author","content","id"],"sourceRoot":""}