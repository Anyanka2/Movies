{"version":3,"file":"static/js/310.7f7c4ba9.chunk.js","mappings":"8OAEaA,EAAcC,EAAAA,EAAAA,GAAH,mkBA6BXC,EAAeD,EAAAA,EAAAA,IAAH,kFAMZE,EAAgBF,EAAAA,EAAAA,IAAH,wNAabG,EAAiBH,EAAAA,EAAAA,EAAH,4M,SC5CdI,EAAY,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,GACxCC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMH,GAAYI,GAAE,kBAAaL,GAAhD,UACE,UAACR,EAAD,YACE,SAACE,EAAD,CACEY,IAAKR,EAAW,UAAMS,EAAAA,IAAN,OAAgBT,GAAhB,+JAChBU,IAAKT,KAEP,SAACJ,EAAD,WACE,SAACC,EAAD,UAAiBG,UAK1B,ECnBYU,EAAYhB,EAAAA,EAAAA,GAAH,iJCGTiB,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC3B,OACE,SAACF,EAAD,UACGE,EAAOC,KAAI,gBAAGZ,EAAH,EAAGA,GAAIF,EAAP,EAAOA,YAAaC,EAApB,EAAoBA,MAApB,OACV,SAACF,EAAD,CAEEC,YAAaA,EACbC,MAAOA,EACPC,GAAIA,GAHCA,EAFG,KAUjB,C,oMChBYa,EAAQpB,EAAAA,EAAAA,KAAH,6MAWLqB,EAAkBrB,EAAAA,EAAAA,MAAH,saAuBfsB,EAAmBtB,EAAAA,EAAAA,OAAH,yX,SC/BhBuB,EAAa,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3B,GAAoCC,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACE,UAACP,EAAD,CAAOI,SAXY,SAAAI,GAEnB,GADAA,EAAEC,iBACwB,KAAtBH,EAAWI,OACb,OAAOC,EAAAA,GAAAA,QAAc,qBAEvBP,EAASE,GAETC,EAAc,GACf,EAGC,WACE,SAACN,EAAD,CACEW,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,+BACZC,UAAQ,EACRC,MAAOX,EACPY,SAvBe,SAAAV,GACnBD,EAAcC,EAAEW,cAAcF,MAAMG,cACrC,KAuBG,SAAClB,EAAD,CAAkBU,KAAK,SAAvB,SAAgC,aAKrC,ECgBD,EA9CmB,WACjB,OAAwCS,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAcF,EAAaG,IAAI,SAErC,GAA4BpB,EAAAA,EAAAA,UAAS,IAArC,eAAOP,EAAP,KAAe4B,EAAf,KACA,GAAkCrB,EAAAA,EAAAA,WAAS,GAA3C,eAAOsB,EAAP,KAAkBC,EAAlB,KACA,GAA0BvB,EAAAA,EAAAA,UAAS,MAAnC,eAAOwB,EAAP,KAAcC,EAAd,KA4BA,OAvBAC,EAAAA,EAAAA,YAAU,WACR,GAAKP,EAAL,CAEA,IAAMQ,EAAe,mCAAG,sGAEpBJ,GAAa,GAFO,UAIMK,EAAAA,EAAAA,IAAiBT,GAJvB,mBAKG,KADfU,EAJY,EAIZA,SACIC,QAAiBD,EALT,yCAMXvB,EAAAA,GAAAA,MAAY,8BAND,OASpBe,EAAUQ,GATU,kDAWpBJ,EAAS,KAAMM,SACfzB,EAAAA,GAAAA,MAAY,KAAMyB,SAZE,yBAcpBR,GAAa,GAdO,6EAAH,qDAkBrBI,GApBwB,CAqBzB,GAAE,CAACR,KAEF,4BACE,SAACrB,EAAD,CAAYC,SA5BC,SAAAE,GACfiB,EAAgB,CAAEc,MAAO/B,GAC1B,IA2BIuB,IACC,eAAGS,UAAU,eAAb,UAA4B,iCAA+BT,KAE5DF,IAAa,SAACY,EAAA,EAAD,IACbzC,EAAOqC,OAAS,IAAK,SAACtC,EAAA,EAAD,CAAYC,OAAQA,MAG/C,C,2NCnDK0C,EAAW,+BACXC,EAAS,UAAMD,EAAN,uBACTE,EAAU,UAAMF,EAAN,iBACH9C,EAAO,kCAIdiD,EAAS,CACbA,OAAQ,CACNC,QAJY,mCAKZC,SAAU,UAIDC,EAAmB,mCAAG,sGACVC,EAAAA,EAAAA,IAAA,UAAaN,GAAaE,GADhB,uBACzBK,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,qDAKnBf,EAAgB,mCAAG,WAAMgB,GAAN,yFACPF,EAAAA,EAAAA,IAAA,UAAaL,EAAb,kBAAiCO,GAAaN,GADvC,uBACtBK,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBE,EAAiB,mCAAG,WAAMC,GAAN,yFACRJ,EAAAA,EAAAA,IAAA,UAAaP,EAAb,kBAA+BW,GAAYR,GADnC,uBACvBK,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBI,EAAc,mCAAG,WAAMD,GAAN,yFACLJ,EAAAA,EAAAA,IAAA,UAClBP,EADkB,kBACAW,EADA,YAErBR,GAH0B,uBACpBK,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAOdK,EAAiB,mCAAG,WAAMF,GAAN,yFACRJ,EAAAA,EAAAA,IAAA,UAClBP,EADkB,kBACAW,EADA,YAErBR,GAH6B,uBACvBK,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qD","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/MoviesPage.jsx","services/TMDB.API.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const MovieListSt = styled.ul`\n  position: relative;\n  cursor: pointer;\n  text-decoration: none;\n  flex-basis: calc((100% - 3 * 16px) / 4);\n  border-radius: 5px;\n  transition: transform 500ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &::before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    display: block;\n    border-radius: inherit;\n    background-image: linear-gradient(\n      180deg,\n      #00000000 63.48%,\n      rgba(0, 0, 0, 0.902) 90%\n    );\n  }\n  &:hover,\n  &:focus {\n    transform: scale(1.05);\n  }\n`;\n\nexport const MovieCardImg = styled.img`\n  width: 300px;\n  height: 400px;\n  border-radius: 5px;\n`;\n\nexport const MovieCardInfo = styled.div`\n  position: absolute;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  padding-left: 12px;\n  padding-right: 12px;\n  padding-bottom: 12px;\n`;\n\nexport const MovieCardTitle = styled.p`\n  font-family: 'Roboto Medium', sans-serif;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.15;\n  text-transform: uppercase;\n  color: #ffffff;\n`;\n","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { IMG_URL } from 'services/TMDB.API';\nimport {MovieListSt, MovieCardImg, MovieCardTitle, MovieCardInfo } from './MovieCard.styled'\n\nexport const MovieCard = ({ poster_path, title, id }) => {\n  const location = useLocation();\n  return (\n    <Link state={{ from: location }} to={`/movies/${id}`}>\n      <MovieListSt>\n        <MovieCardImg\n          src={poster_path ? `${IMG_URL}${poster_path}` : `https://img.freepik.com/premium-vector/funny-angry-grumpy-black-cat-watercolor-vector_878932-39.jpg?size=626&ext=jpg&ga=GA1.1.2050841542.1692818493&semt=ais`}\n          alt={title}\n        />\n        <MovieCardInfo>\n          <MovieCardTitle>{title}</MovieCardTitle>\n        </MovieCardInfo>\n      </MovieListSt>\n    </Link>\n  );\n};\nMovieCard.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string,\n  poster_path: PropTypes.string,\n};\n","import styled from '@emotion/styled';\n\nexport const MovieList = styled.ul`\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 15px;\n  display: flex;\n  position: relative;\n  padding: 10px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from 'components/MovieCard/MovieCard';\nimport { MovieList } from './MoviesList.styled';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <MovieList>\n      {movies.map(({ id, poster_path, title }) => (\n        <MovieCard\n          key={id}\n          poster_path={poster_path}\n          title={title}\n          id={id}\n        ></MovieCard>\n      ))}\n    </MovieList>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const SForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n  margin: 20px;\n  gap: 10px;\n`;\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  color: #1d0533;\n  width: 100%;\n  height: 30px;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding: 8px;\n  border: 1px solid #5cabf5;\n  border-radius: 4px;\n  transition: border-color 0.3s, box-shadow 0.3s;\n\n  &::placeholder {\n    font: inherit;\n    color: #eeaeca;\n  }\n  &:hover,\n  &:focus {\n    border-color: #eeaeca;\n  }\n`;\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 120px;\n  height: 48px;\n  border: 1px solid #eeaeca;\n  border-radius: 4px;\n  background-color: #5cabf5;\n  color: #eeaeca;\n  font: inherit;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  font-family: inherit;\n  font-size: 20px;\n\n  &:hover {\n    background-color: #eeaeca;\n    color: #b0d6f9;\n  }\n`;\n","import { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { SForm, SearchFormInput, SearchFormButton} from './SearchForm.styled';\n\nexport const SearchForm = ({ onSubmit }) => {\n  const [inputValue, setInputValue] = useState('');\n\n  const handleChange = e => {\n    setInputValue(e.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (inputValue.trim() === '') {\n      return toast.warning('Oops, no value...');\n    }\n    onSubmit(inputValue);\n\n    setInputValue('');\n  };\n\n  return (\n    <SForm onSubmit={handleSubmit}>\n      <SearchFormInput\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Please enter the movie title\"\n        required\n        value={inputValue}\n        onChange={handleChange}\n      />\n      <SearchFormButton type=\"submit\">\n        Search\n      </SearchFormButton>\n    </SForm>\n  );\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchQuery } from '../services/TMDB.API';\nimport { toast } from 'react-toastify';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\n\nconst MoviesPage = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchQuery = searchParams.get('query');\n\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const onSubmit = inputValue => {\n    setSearchParams({ query: inputValue });\n  };\n  useEffect(() => {\n    if (!searchQuery) return;\n\n    const fetchMoviesData = async () => {\n      try {\n        setIsLoading(true);\n\n        const { results } = await fetchSearchQuery(searchQuery);\n        if (results.length === 0 || !results) {\n          return toast.error('Sorry movies not found...');\n        }\n\n        setMovies(results);\n      } catch (error) {\n        setError(error.message);\n        toast.error(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchMoviesData();\n  }, [searchQuery]);\n  return (\n    <div>\n      <SearchForm onSubmit={onSubmit} />\n      {error && (\n        <p className=\"errorMessage\">Whoops, something went wrong: {error}</p>\n      )}\n      {isLoading && <Loader />}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </div>\n  );\n};\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/day`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\nexport const IMG_URL = `https://image.tmdb.org/t/p/w500`;\n\nconst API_KEY = '38ec0872f8907a52000e0e854bdd72ed';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`${TREND_URL}`, params);\n  return data;\n};\n\nexport const fetchSearchQuery = async movieName => {\n  const { data } = await axios.get(`${SEARCH_URL}?query=${movieName}`, params);\n  return data;\n};\n\nexport const fetchMovieDetails = async movie_id => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movie_id}`, params);\n  return data;\n};\n\nexport const fetchMovieCast = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movie_id}/credits`,\n    params\n  );\n  return data;\n};\nexport const fetchMovieReviews = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movie_id}/reviews`,\n    params\n  );\n  return data;\n};"],"names":["MovieListSt","styled","MovieCardImg","MovieCardInfo","MovieCardTitle","MovieCard","poster_path","title","id","location","useLocation","state","from","to","src","IMG_URL","alt","MovieList","MoviesList","movies","map","SForm","SearchFormInput","SearchFormButton","SearchForm","onSubmit","useState","inputValue","setInputValue","e","preventDefault","trim","toast","type","autoComplete","autoFocus","placeholder","required","value","onChange","currentTarget","toLowerCase","useSearchParams","searchParams","setSearchParams","searchQuery","get","setMovies","isLoading","setIsLoading","error","setError","useEffect","fetchMoviesData","fetchSearchQuery","results","length","message","query","className","Loader","BASE_URL","TREND_URL","SEARCH_URL","params","api_key","language","fetchTrendingMovies","axios","data","movieName","fetchMovieDetails","movie_id","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}