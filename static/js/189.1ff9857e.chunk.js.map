{"version":3,"file":"static/js/189.1ff9857e.chunk.js","mappings":"uPAuDA,UAjDgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,sGAEjBJ,GAAa,GAFI,UAGSK,EAAAA,EAAAA,IAAkBX,GAH3B,gBAGTY,EAHS,EAGTA,QACRR,EAAWQ,GACXN,GAAa,GALI,kDAOjBE,EAAS,KAAMK,SACfC,EAAAA,GAAAA,MAAA,+CARiB,yBAUjBR,GAAa,GAVI,6EAAH,qDAalBI,GACD,GAAE,CAACV,KAGF,gCACsB,IAAnBG,EAAQY,SACP,4BACE,wBAAI,mBACJ,wBACGZ,EAAQa,KAAI,SAAAC,GAAM,OACjB,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOG,GADC,SASL,IAAnBjB,EAAQY,SACP,yBAAK,8CAENR,IACC,yBAAG,iCAA+BA,KAElCF,IAAa,SAAC,IAAD,MAGpB,C,2NCnDKgB,EAAW,+BACXC,EAAS,UAAMD,EAAN,uBACTE,EAAU,UAAMF,EAAN,iBACHG,EAAO,kCAIdC,EAAS,CACbA,OAAQ,CACNC,QAJY,mCAKZC,SAAU,UAIDC,EAAmB,mCAAG,sGACVC,EAAAA,EAAAA,IAAA,UAAaP,GAAaG,GADhB,uBACzBK,EADyB,EACzBA,KADyB,kBAE1BA,GAF0B,2CAAH,qDAKnBC,EAAgB,mCAAG,WAAMC,GAAN,yFACPH,EAAAA,EAAAA,IAAA,UAAaN,EAAb,kBAAiCS,GAAaP,GADvC,uBACtBK,EADsB,EACtBA,KADsB,kBAEvBA,GAFuB,2CAAH,sDAKhBG,EAAiB,mCAAG,WAAMC,GAAN,yFACRL,EAAAA,EAAAA,IAAA,UAAaR,EAAb,kBAA+Ba,GAAYT,GADnC,uBACvBK,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,sDAKjBK,EAAc,mCAAG,WAAMD,GAAN,yFACLL,EAAAA,EAAAA,IAAA,UAClBR,EADkB,kBACAa,EADA,YAErBT,GAH0B,uBACpBK,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAOdnB,EAAiB,mCAAG,WAAMuB,GAAN,yFACRL,EAAAA,EAAAA,IAAA,UAClBR,EADkB,kBACAa,EADA,YAErBT,GAH6B,uBACvBK,EADuB,EACvBA,KADuB,kBAKxBA,GALwB,2CAAH,qD","sources":["components/Reviews/Reviews.jsx","services/TMDB.API.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/TMDB.API';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        setIsLoading(true);\n        const { results } = await fetchMovieReviews(movieId);\n        setReviews(results);\n        setIsLoading(false);\n      } catch (error) {\n        setError(error.message);\n        toast.error(`Error fetching movie details: ${error}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length !== 0 && (\n        <div>\n          <h2>Movie Reviews</h2>\n          <ul>\n            {reviews.map(review => (\n              <li key={review.id}>\n                <p>{review.author}</p>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {reviews.length === 0 && (\n        <div>We don't have any reviews for this movie.</div>\n      )}\n      {error && (\n        <p>Whoops, something went wrong: {error}</p>\n      )}\n       {isLoading && <Loader />}\n    </>\n  );\n};\n\nexport default Reviews;\n\n\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/day`;\nconst SEARCH_URL = `${BASE_URL}/search/movie`;\nexport const IMG_URL = `https://image.tmdb.org/t/p/w500`;\n\nconst API_KEY = '38ec0872f8907a52000e0e854bdd72ed';\n\nconst params = {\n  params: {\n    api_key: API_KEY,\n    language: 'en-US',\n  },\n};\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios.get(`${TREND_URL}`, params);\n  return data;\n};\n\nexport const fetchSearchQuery = async movieName => {\n  const { data } = await axios.get(`${SEARCH_URL}?query=${movieName}`, params);\n  return data;\n};\n\nexport const fetchMovieDetails = async movie_id => {\n  const { data } = await axios.get(`${BASE_URL}/movie/${movie_id}`, params);\n  return data;\n};\n\nexport const fetchMovieCast = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movie_id}/credits`,\n    params\n  );\n  return data;\n};\nexport const fetchMovieReviews = async movie_id => {\n  const { data } = await axios.get(\n    `${BASE_URL}/movie/${movie_id}/reviews`,\n    params\n  );\n  return data;\n};"],"names":["movieId","useParams","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","useEffect","fetchReviews","fetchMovieReviews","results","message","toast","length","map","review","author","content","id","BASE_URL","TREND_URL","SEARCH_URL","IMG_URL","params","api_key","language","fetchTrendingMovies","axios","data","fetchSearchQuery","movieName","fetchMovieDetails","movie_id","fetchMovieCast"],"sourceRoot":""}